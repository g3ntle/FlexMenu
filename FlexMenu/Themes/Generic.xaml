<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:util="clr-namespace:FlexMenu.Utility"
    xmlns:local="clr-namespace:FlexMenu.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions">
   
    <!-- Colors -->
    <Color x:Key="DarkGreen">#27AE60</Color>
    <Color x:Key="LightGreen">#2BBC68</Color>
    
    <Color x:Key="FlexMenuBackground">#FEFEFE</Color>
    <Color x:Key="FlexMenuItemBackground">#FEFEFE</Color>
    <Color x:Key="FlexMenuItemBackgroundHover">#F4F4F4</Color>

    <Color x:Key="FlexMenuItemForeground">#666666</Color>
    <Color x:Key="FlexMenuItemForegroundHover">#27AE60</Color>
    <!-- /Colors -->
    
    <!-- Brushes -->
    <SolidColorBrush x:Key="FlexMenuBackgroundBrush" Color="{StaticResource FlexMenuBackground}"/>
    <SolidColorBrush x:Key="FlexMenuItemBackgroundBrush" Color="{StaticResource FlexMenuItemBackground}"/>
    <SolidColorBrush x:Key="FlexMenuItemForegroundBrush" Color="{StaticResource FlexMenuItemForeground}"/>
    <!-- /Brushes -->

    <!-- FlexLabel -->
    <Style x:Key="FlexLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
    </Style>
    <!-- /FlexLabel -->

    <!-- FlexMenu -->
    <Style x:Key="FlexMenu" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource FlexMenuBackgroundBrush}"/>
    </Style>
    <!-- /FlexMenu -->

    <!-- FlexMenuItem -->
    <Style x:Key="FlexMenuItem" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource FlexMenuItemBackgroundBrush}"/>
    </Style>
    <!-- /FlexMenuItem -->

    <!-- FlexMenuItemIcon -->
    <Style x:Key="FlexMenuItemIcon" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 5 10 5"/>
        <Setter Property="Width" Value="24px"/>
        <Setter Property="Height" Value="24px"/>
    </Style>
    <!-- /FlexMenuItemIcon -->

    <!-- FlexMenuItemLabel -->
    <Style x:Key="FlexMenuItemLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource FlexLabel}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 5 0 5"/>
        
        <Setter Property="FontSize" Value="11pt"/>
        <Setter Property="Foreground" Value="{StaticResource FlexMenuItemForegroundBrush}"/>
    </Style>
    <!-- /FlexMenuItemLabel -->

    <!-- FlexHeaderImage -->
    <Style x:Key="FlexHeaderImage" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="26px"/>
        <Setter Property="Height" Value="26px"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
    </Style>
    <!-- /FlexHeaderImage -->

    <!-- FlexHeaderLabel -->
    <Style x:Key="FlexHeaderLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource FlexLabel}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        
        <Setter Property="FontSize" Value="13pt"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <!-- /FlexHeaderLabel -->

    <!-- FlexMenu -->
    <Style TargetType="{x:Type local:FlexMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlexMenu}">
                    <Grid Style="{StaticResource FlexMenu}">
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type local:FlexMenuItem}">
                    <Grid x:Name="Container" Style="{StaticResource FlexMenuItem}">
                        <Image x:Name="Icon" Source="{Binding Icon}" Style="{StaticResource FlexMenuItemIcon}"/>
                        <Label x:Name="Label" Content="{Binding Text}" Style="{StaticResource FlexMenuItemLabel}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Hover">
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource FlexMenuItemBackgroundHover}"
                                                        Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Container"/>
                                        <ColorAnimation To="{StaticResource DarkGreen}"
                                                        Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Label"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <ei:GoToStateAction x:Name="OnEnter" StateName="Hover"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <ei:GoToStateAction x:Name="OnLeave" StateName="Normal"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- /FlexMenu -->

    <!-- /FlexHeader -->
    <Style TargetType="{x:Type local:FlexHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlexHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding TitleWidth}"/>
                            <ColumnDefinition Width="{TemplateBinding SubtitleWidth}"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0" Background="{TemplateBinding TitleBackground}">
                            <Label x:Name="TitleLabel" Content="{TemplateBinding Title}" Style="{StaticResource FlexHeaderLabel}"/>
                            <Image x:Name="TitleImage" Source="{TemplateBinding Icon}" Style="{StaticResource FlexHeaderImage}"/>
                        </Grid>

                        <Grid Grid.Column="1" Background="{TemplateBinding SubtitleBackground}">
                            <Label x:Name="SubTitleLabel" Content="{TemplateBinding Subtitle}" Style="{StaticResource FlexHeaderLabel}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- /FlexHeader -->
</ResourceDictionary>
